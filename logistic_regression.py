# -*- coding: utf-8 -*-
"""Logistic Regression

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12sP6M71V1Fh4KlHJuXo7wQwmhsQHEsB_

#**Importing Libraries**
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""#**Importing dataset**"""

data=pd.read_csv('/content/suv_data.csv')

data.head(10)

"""#**Extracting Independent and Dependent variables**"""

x=data.iloc[:,[2,3]].values
y=data.iloc[:,4].values

"""#**Splitting the dataset into training and testing dataset**"""

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.25,random_state=0)

"""#**Feature Scaling**"""

from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
x_train=sc.fit_transform(x_train)
x_test=sc.fit_transform(x_test)

"""#**Fitting Logistic Regression to the training set** """

from sklearn.linear_model import LogisticRegression
classifier=LogisticRegression(random_state=0)
classifier.fit(x_train,y_train)

"""#**Predict the test set result**"""

y_prediction=classifier.predict(x_test)

"""#**Creating the Confusion Matrix**"""

from sklearn.metrics import confusion_matrix
matrix=confusion_matrix(y_test,y_prediction)
matrix

"""#**Plotting the Confusion Matrix**"""

from sklearn.metrics import ConfusionMatrixDisplay
a=ConfusionMatrixDisplay(matrix)
a.plot()

"""#**Visualizing the training result**"""

from matplotlib.colors import ListedColormap
x_set,y_set=x_train,y_train
x1,x2=np.meshgrid(np.arange(start=x_set[:,0].min()-1,stop=x_set[:,0].max()+1,step=0.01),np.arange(start=x_set[:,1].min()-1,stop=x_set[:,0].max()+1,step=0.01))
plt.contourf(x1,x2,classifier.predict(np.array([x1.ravel(),x2.ravel()]).T).reshape(x1.shape),
                                      alpha=0.75,cmap=ListedColormap(('purple','green')))
plt.xlim(x1.min(),x1.max())
plt.xlim(x2.min(),x2.max())
for i,j in enumerate(np.unique(y_set)):
  plt.scatter(x_set[y_set==j,0],x_set[y_set==j,1],
              c=ListedColormap(('blue','yellow'))(i),label=j)
plt.title('Logistic Regression(Training Set)')
plt.xlabel('Age')
plt.ylabel('Estimated Salary')
plt.legend()
plt.show

"""#**Visualizing the testing result**"""

from matplotlib.colors import ListedColormap
x_set,y_set=x_test,y_test
x1,x2=np.meshgrid(np.arange(start=x_set[:,0].min()-1,stop=x_set[:,0].max()+1,step=0.01),np.arange(start=x_set[:,1].min()-1,stop=x_set[:,0].max()+1,step=0.01))
plt.contourf(x1,x2,classifier.predict(np.array([x1.ravel(),x2.ravel()]).T).reshape(x1.shape),
                                      alpha=0.75,cmap=ListedColormap(('blue','yellow')))
plt.xlim(x1.min(),x1.max())
plt.xlim(x2.min(),x2.max())
for i,j in enumerate(np.unique(y_set)):
  plt.scatter(x_set[y_set==j,0],x_set[y_set==j,1],
              c=ListedColormap(('purple','green'))(i),label=j)
plt.title('Logistic Regression(Test Set)')
plt.xlabel('Age')
plt.ylabel('Estimated Salary')
plt.legend()
plt.show